@using Models.Authentication.User; 

@model Models.Authentication.User.UserModel    
  
@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "Id";
            settings.ControlStyle.CssClass = "editor";
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ClientVisible = false;
        }
).Bind(Model.Id).GetHtml()


 @Html.DevExpress().FormLayout(settings => {
    settings.Name = "formLayout";
    settings.EncodeHtml = false;
    settings.Width = Unit.Percentage(100);
    settings.AlignItemCaptionsInAllGroups = true;
    settings.ShowItemCaptionColon = false;


    var groupItem = settings.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.Caption = "User";
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

        itemSettings.GroupBoxStyle.Caption.Paddings.Padding = 5;
        itemSettings.GroupBoxStyle.Caption.Font.Size = 14;
        itemSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Orange;

        //itemSettings.Width = Unit.Percentage(70);

    });

    groupItem.Items.AddEmptyItem().Height = 25;


    var groupItem_2 = groupItem.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 2;
        itemSettings.Width = 700;
    });

    var groupItem_Col1 = groupItem_2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1;
    });

    var groupItem_Col2 = groupItem_2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1;
    });



    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "UserName";
        itemSettings.FieldName = "UserName";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "UserName";
        //txt.ReadOnly = (Model._FormMode == Models.FormModeEnum.New) ? false : true;
        txt.ShowModelErrors = true;
        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //txt.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.Lavender;

    });

    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "First Name";
        itemSettings.FieldName = "FirstName";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "FirstName";
        txt.ShowModelErrors = true;

        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });

    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "Midle Name";
        itemSettings.FieldName = "MidleName";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "MidleName";
        txt.ShowModelErrors = true;

        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });

    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "Last Name";
        itemSettings.FieldName = "LastName";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "LastName";
        txt.ShowModelErrors = true;

        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });



    groupItem_Col1.Items.Add(m => Model.RoleId, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.Caption = "Role Menu";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDownList;
        cbo.Name = "RoleId";
        cbo.ShowModelErrors = true;
        cbo.Properties.TextField = "RoleName";
        cbo.Properties.ValueField = "Id";
        cbo.Properties.ValueType = typeof(int);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

        cbo.Properties.DataSource =  Models._Utils.GeneralGetList.GetRoles();

        cbo.ControlStyle.CssClass = "editor";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;

    });



    groupItem_Col1.Items.Add(m => Model.EmpId, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.Caption = "Employee";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDownList;
        cbo.Name = "EmpId";
        cbo.ShowModelErrors = true;
        cbo.Properties.TextField = "firstName";
        cbo.Properties.ValueField = "empID";
        cbo.Properties.ValueType = typeof(int);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

        cbo.Properties.Columns.Add("firstName", "First Name");
        cbo.Properties.Columns.Add("lastName", "Last Name");
        cbo.Properties.Columns.Add("middleName", "Middle Name");


        cbo.Properties.Columns.Add("empID", "empID").Visible = false;

        cbo.Properties.TextFormatString = "{0}";

        cbo.Properties.DataSource =  Models._Utils.GeneralGetList.GetEmployees();

        cbo.ControlStyle.CssClass = "editor";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;


        cbo.Properties.ClientSideEvents.ValueChanged = "EmpIdOnValueChange";


    });





    //var setPasswordEmail = groupItem_Col2.Items.AddGroupItem(itemSettings =>
    //{
    //    itemSettings.Caption = "Email BKK";
    //    itemSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
    //    itemSettings.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Right;

    //});

    //setPasswordEmail.Items.Add(itemSettings =>
    //{
    //    itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
    //    itemSettings.Caption = "Email";
    //    itemSettings.FieldName = "Email";
    //    var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
    //    txt.Name = "Email";
    //    txt.ShowModelErrors = true;

    //    txt.ControlStyle.CssClass = "editor";
    //    txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //});

    //setPasswordEmail.Items.Add(m => Model.isSetEmailPassword_, itemSettings =>
    //{
    //    itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.CheckBox;
    //    itemSettings.Caption = "Set";
    //    var txt = (CheckBoxSettings)itemSettings.NestedExtensionSettings;
    //    txt.Name = "isSetEmailPassword_";
    //    txt.ShowModelErrors = true;
    //    txt.ControlStyle.CssClass = "editor";
    //    txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //}); 




    //setPasswordEmail.Items.Add(m => Model.EmailPassword_, itemSettings =>
    //{
    //    itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
    //    itemSettings.Caption = "Email Password";

    //    var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
    //    txt.Name = "EmailPassword_";
    //    txt.ShowModelErrors = true;
    //    txt.Properties.Password = true;
    //    txt.ControlStyle.CssClass = "editor";
    //    txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //});

    //setPasswordEmail.Items.Add(m => Model.EmailPassword_Confirm_, itemSettings =>
    //{
    //    itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
    //    itemSettings.Caption = "Confirm Email Password";
    //    var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
    //    txt.Name = "EmailPassword_Confirm_";
    //    txt.ShowModelErrors = true;
    //    txt.Properties.Password = true;
    //    txt.ControlStyle.CssClass = "editor";
    //    txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //});  

    var setPasswordGroup = groupItem_Col2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.Caption = "Set Password";
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
        itemSettings.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Right;

    });

    setPasswordGroup.Items.Add(m => Model.isSetPassword, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.CheckBox;
        itemSettings.Caption = "Set";
        var txt = (CheckBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "isSetPassword";
        txt.ShowModelErrors = true;
        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });

    setPasswordGroup.Items.Add(m => Model.Password, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "Password";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "Password";
        txt.ShowModelErrors = true;
        txt.Properties.Password = true;
        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });

    setPasswordGroup.Items.Add(m => Model.Password_Confirm, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "Confirm Password";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "Password_Confirm";
        txt.ShowModelErrors = true;
        txt.Properties.Password = true;
        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });




}).GetHtml()
   
 
 
 