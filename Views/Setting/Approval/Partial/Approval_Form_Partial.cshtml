@using Models.Setting.Approval; 

@model Models.Setting.Approval.ApprovalModel    
  
  
@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "Id";
            settings.ControlStyle.CssClass = "editor";
            settings.ClientVisible = false;
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.Lavender;
        }

    ).Bind(Model.Id).GetHtml()


 @Html.DevExpress().FormLayout(settings => {
    settings.Name = "formLayout";
    settings.EncodeHtml = false;
    settings.Width = Unit.Percentage(100);
    settings.AlignItemCaptionsInAllGroups = true; 
    settings.ShowItemCaptionColon = false;
    
    
    var groupItem = settings.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.Caption = "Approval";
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

        itemSettings.GroupBoxStyle.Caption.Paddings.Padding = 5;
        itemSettings.GroupBoxStyle.Caption.Font.Size = 14;
        itemSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Orange;

        itemSettings.Width = Unit.Percentage(100);
        
    });

    groupItem.Items.AddEmptyItem().Height = 25;


    var groupItem_2 = groupItem.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1;



    });

    var groupItem_Col1 = groupItem_2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1; 
    });

    groupItem_Col1.Items.Add(m => Model.FormCode, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.Caption = "Form";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDownList;
        cbo.Name = "FormCode";
        cbo.ShowModelErrors = true;
        cbo.Properties.TextField = "LayoutFormName";
        cbo.Properties.ValueField = "LayoutFormCode";
        cbo.Properties.ValueType = typeof(string);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
        cbo.Width = 300;
        cbo.Properties.DataSource = Models._Utils.GeneralGetList.GetApprovalForms();

        cbo.ControlStyle.CssClass = "editor";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;

    });

 

    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "Approval Name";
        itemSettings.FieldName = "ApprovalName";
        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "ApprovalName";
        txt.ShowModelErrors = true;
        txt.Width = 300;

        txt.ControlStyle.CssClass = "editor";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    });


    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.RadioButtonList;
        itemSettings.Caption = "Active";
        itemSettings.FieldName = "IsActive";
        var rb = (RadioButtonListSettings)itemSettings.NestedExtensionSettings;
        rb.Properties.RepeatDirection = RepeatDirection.Horizontal;
        rb.Name = "IsActive";
        rb.ShowModelErrors = true;
        rb.Properties.TextField = "Name";
        rb.Properties.ValueField = "Code";
        rb.Properties.ValueType = typeof(string);
        rb.ControlStyle.CssClass = "editor";
        rb.Properties.DataSource = Models._Utils.GeneralGetList.GetList("Boolean");
        rb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        rb.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.Lavender;

    });


    groupItem_Col1.Items.AddTabbedGroupItem(group =>
    {
        group.Name = "TabDetail";
        group.ColSpan = 1;
        group.Width = Unit.Percentage(100);
        group.Height = Unit.Percentage(100);

        //group.HorizontalAlign = FormLayoutHorizontalAlign.Center;
        //group.VerticalAlign = FormLayoutVerticalAlign.Top;
        //group.TabAlign = TabAlign.Left;

       
        
        group.Items.Add(item =>
        {
            item.Name = "TabUser";
            item.Caption = "User Approver";
            item.SetNestedContent(() =>
            {
                ViewContext.Writer.Write(
             @Html.Partial("Partial/Approval_Form_TabUser_List_Partial")
          );
            });
            item.CaptionStyle.BackColor = System.Drawing.Color.Blue;
            item.CaptionCellStyle.BackColor = System.Drawing.Color.Blue;

        });

        group.Items.Add(item =>
        {
            item.Name = "TabRole";
            item.Caption = "Role Approver";
            item.SetNestedContent(() =>
            {
                ViewContext.Writer.Write(
             @Html.Partial("Partial/Approval_Form_TabRole_List_Partial")
          );
            });
            item.CaptionStyle.BackColor = System.Drawing.Color.Blue;
            item.CaptionCellStyle.BackColor = System.Drawing.Color.Blue;

        });
        
    });
    
    
}).GetHtml()
   
 
 
 